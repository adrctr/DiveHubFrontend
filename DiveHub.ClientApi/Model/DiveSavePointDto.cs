/*
 * DiveHub.WebApi | v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DiveHub.ClientApi.Client.OpenAPIDateConverter;

namespace DiveHub.ClientApi.Model
{
    /// <summary>
    /// DiveSavePointDto
    /// </summary>
    [DataContract(Name = "DiveSavePointDto")]
    public partial class DiveSavePointDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DiveSavePointDto" /> class.
        /// </summary>
        /// <param name="latitude">latitude.</param>
        /// <param name="longitude">longitude.</param>
        /// <param name="description">description.</param>
        public DiveSavePointDto(double latitude = default(double), double longitude = default(double), string description = default(string))
        {
            this.latitude = latitude;
            this.longitude = longitude;
            this.description = description;
        }

        /// <summary>
        /// Gets or Sets latitude
        /// </summary>
        [DataMember(Name = "latitude", EmitDefaultValue = false)]
        public double latitude { get; set; }

        /// <summary>
        /// Gets or Sets longitude
        /// </summary>
        [DataMember(Name = "longitude", EmitDefaultValue = false)]
        public double longitude { get; set; }

        /// <summary>
        /// Gets or Sets description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = true)]
        public string description { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DiveSavePointDto {\n");
            sb.Append("  latitude: ").Append(latitude).Append("\n");
            sb.Append("  longitude: ").Append(longitude).Append("\n");
            sb.Append("  description: ").Append(description).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
